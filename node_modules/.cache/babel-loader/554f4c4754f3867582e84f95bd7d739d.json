{"ast":null,"code":"var _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nvar Row = function (_Component) {\n  _inherits(Row, _Component);\n\n  function Row() {\n    _classCallCheck(this, Row);\n\n    return _possibleConstructorReturn(this, _Component.apply(this, arguments));\n  }\n\n  Row.prototype.render = function render() {\n    var _props = this.props,\n        children = _props.children,\n        side = _props.side,\n        style = _props.style,\n        className = _props.className,\n        rest = _objectWithoutProperties(_props, ['children', 'side', 'style', 'className']);\n\n    return React.createElement('div', _extends({\n      className: className + ' row'\n    }, rest, {\n      style: _extends({\n        justifyContent: side,\n        alignItems: 'center'\n      }, style)\n    }), children);\n  };\n\n  return Row;\n}(Component);\n\nexport default Row;\nRow.defaultProps = {\n  side: 'flex-start'\n};\nRow.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  side: PropTypes.string\n} : {}; //    example ------\n//   <Row side='space-between'>\n//   <div>1111</div>\n//   <div>2222</div>\n// </Row>","map":null,"metadata":{},"sourceType":"module"}