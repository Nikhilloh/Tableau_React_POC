{"ast":null,"code":"var _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nimport React, { Component } from 'react';\nimport Row from './Row';\nimport { _tabStyle, _contentContainerStyle, _contentStyle, _activeBorderBottomStyle, _tabsBorderBottomStyle, buttonStyle } from './styles';\n\nvar CoolTabs = function (_Component) {\n  _inherits(CoolTabs, _Component);\n\n  function CoolTabs(props) {\n    _classCallCheck(this, CoolTabs);\n\n    var _this = _possibleConstructorReturn(this, _Component.call(this, props));\n\n    _this.state = {\n      tabKey: _this.props.tabKey\n    };\n    _this.onPressTab = _this.onPressTab.bind(_this);\n    return _this;\n  }\n\n  CoolTabs.prototype.componentDidUpdate = function componentDidUpdate(prevProps, prevState, snapshot) {\n    if (this.props.tabKey !== prevProps.tabKey) {\n      this.setState({\n        tabKey: this.props.tabKey\n      });\n    }\n  };\n\n  CoolTabs.prototype.onPressTab = function onPressTab(key) {\n    var _this2 = this;\n\n    this.setState({\n      tabKey: key\n    }, function () {\n      _this2.props.onTabChanged && _this2.props.onTabChanged(key);\n    });\n  };\n\n  CoolTabs.prototype.renderBorderUnderTabs = function renderBorderUnderTabs() {\n    var _props = this.props,\n        tabsBorderBottomStyle = _props.tabsBorderBottomStyle,\n        tabsBorderBottomClassName = _props.tabsBorderBottomClassName;\n    return React.createElement('div', {\n      style: _extends({}, _tabsBorderBottomStyle, tabsBorderBottomStyle),\n      className: tabsBorderBottomClassName\n    });\n  };\n\n  CoolTabs.prototype.renderActiveTabBorder = function renderActiveTabBorder() {\n    var tabKey = this.state.tabKey;\n    var _props2 = this.props,\n        activeLeftTabBorderBottomClassName = _props2.activeLeftTabBorderBottomClassName,\n        activeRightTabBorderBottomClassName = _props2.activeRightTabBorderBottomClassName,\n        activeLeftTabBorderBottomStyle = _props2.activeLeftTabBorderBottomStyle,\n        activeRightTabBorderBottomStyle = _props2.activeRightTabBorderBottomStyle,\n        borderTransitionStyle = _props2.borderTransitionStyle;\n\n    var _transformBorder1 = tabKey === '1' && {\n      transform: 'translateX(0px)'\n    };\n\n    var _transformBorder2 = tabKey === '2' && {\n      transform: 'translateX(100%)'\n    };\n\n    switch (tabKey) {\n      case '1':\n        return React.createElement('div', {\n          style: _extends({}, _activeBorderBottomStyle, _transformBorder1, {\n            transition: borderTransitionStyle\n          }, activeLeftTabBorderBottomStyle),\n          className: activeLeftTabBorderBottomClassName\n        });\n\n      case '2':\n        return React.createElement('div', {\n          style: _extends({}, _activeBorderBottomStyle, _transformBorder2, {\n            transition: borderTransitionStyle\n          }, activeRightTabBorderBottomStyle),\n          className: activeRightTabBorderBottomClassName\n        });\n\n      default:\n        break;\n    }\n  };\n\n  CoolTabs.prototype.render = function render() {\n    var _this3 = this;\n\n    var tabKey = this.state.tabKey;\n    var _props3 = this.props,\n        className = _props3.className,\n        style = _props3.style,\n        tabsHeaderStyle = _props3.tabsHeaderStyle,\n        tabsHeaderClassName = _props3.tabsHeaderClassName,\n        activeTabStyle = _props3.activeTabStyle,\n        unActiveTabStyle = _props3.unActiveTabStyle,\n        leftTabStyle = _props3.leftTabStyle,\n        rightTabStyle = _props3.rightTabStyle,\n        activeTabClassName = _props3.activeTabClassName,\n        leftTabClassName = _props3.leftTabClassName,\n        rightTabClassName = _props3.rightTabClassName,\n        unActiveClassName = _props3.unActiveClassName,\n        leftTabTitleStyle = _props3.leftTabTitleStyle,\n        rightTabTitleStyle = _props3.rightTabTitleStyle,\n        leftTabTitleClassName = _props3.leftTabTitleClassName,\n        rightTabTitleClassName = _props3.rightTabTitleClassName,\n        leftTabTitle = _props3.leftTabTitle,\n        rightTabTitle = _props3.rightTabTitle,\n        contentContainerStyle = _props3.contentContainerStyle,\n        contentContainerClassName = _props3.contentContainerClassName,\n        leftContentStyle = _props3.leftContentStyle,\n        rightContentStyle = _props3.rightContentStyle,\n        leftContent = _props3.leftContent,\n        rightContent = _props3.rightContent,\n        leftContentClassName = _props3.leftContentClassName,\n        rightContentClassName = _props3.rightContentClassName,\n        contentTransitionStyle = _props3.contentTransitionStyle;\n\n    var _activeTab1 = tabKey === '1' ? activeTabStyle : unActiveTabStyle;\n\n    var _activeTab2 = tabKey === '2' ? activeTabStyle : unActiveTabStyle;\n\n    var _transformContent1 = tabKey === '1' ? null : {\n      transform: 'translateX(100%)'\n    };\n\n    var _transformContent2 = tabKey === '2' ? null : {\n      transform: 'translateX(-100%)'\n    };\n\n    return React.createElement('div', {\n      className: className,\n      style: _extends({\n        height: 400,\n        width: 400\n      }, style)\n    }, React.createElement(Row, {\n      style: _extends({\n        height: 40,\n        position: 'relative'\n      }, tabsHeaderStyle),\n      className: tabsHeaderClassName\n    }, React.createElement('button', {\n      style: _extends({}, buttonStyle, _tabStyle, leftTabStyle, _activeTab1),\n      className: leftTabClassName + ' ' + (tabKey === '1' ? '' + activeTabClassName : unActiveClassName),\n      onClick: function onClick() {\n        return _this3.onPressTab('1');\n      }\n    }, React.createElement('div', {\n      style: leftTabTitleStyle,\n      className: leftTabTitleClassName\n    }, leftTabTitle)), React.createElement('button', {\n      style: _extends({}, buttonStyle, _tabStyle, rightTabStyle, _activeTab2),\n      className: rightTabClassName + ' ' + (tabKey === '2' ? '' + activeTabClassName : unActiveClassName),\n      onClick: function onClick() {\n        return _this3.onPressTab('2');\n      }\n    }, React.createElement('div', {\n      style: rightTabTitleStyle,\n      className: rightTabTitleClassName\n    }, rightTabTitle)), this.renderBorderUnderTabs(), this.renderActiveTabBorder()), React.createElement('div', {\n      style: _extends({}, _contentContainerStyle, contentContainerStyle),\n      className: contentContainerClassName\n    }, React.createElement('div', {\n      style: _extends({}, _contentStyle, _transformContent1, leftContentStyle, {\n        transition: contentTransitionStyle\n      }),\n      className: '' + leftContentClassName\n    }, leftContent), React.createElement('div', {\n      style: _extends({}, _contentStyle, _transformContent2, rightContentStyle, {\n        transition: contentTransitionStyle\n      }),\n      className: '' + rightContentClassName\n    }, rightContent)));\n  };\n\n  return CoolTabs;\n}(Component);\n\nexport default CoolTabs;\nCoolTabs.defaultProps = {\n  leftTabTitle: 'Tab 1',\n  rightTabTitle: 'Tab 2',\n  leftContent: 'Content 1',\n  rightContent: 'Content 2',\n  tabKey: '1' // contentTransitionStyle: 'transform 1s ease',\n  // borderTransitionStyle: 'all 1s ease',\n\n}; // eslint-disable-next-line no-lone-blocks\n\n{\n  /* <CoolTabs\r\n   style={{ marginTop: 43, width: 550, height: 600 }}\r\n   className={'cool-tabs'}\r\n   firstTabTitle={(<IntlMessages id={'trade.deposit'} />)}\r\n   secondTabTitle={(<IntlMessages id={'trade.withdraw'} />)}\r\n   titleUpperCase\r\n   firstTabClassName={'firstTab'}\r\n   secondTabClassName={'secondTab'}\r\n   unActiveClassName={'tabOff'}\r\n   firstTabBorderClassName={'deposit-border'}\r\n   secondTabBorderClassName={'withdraw-border'}\r\n   firstContent={<TradeForm method={'buy'} />}\r\n   secondContent={<TradeForm method={'sell'} />}\r\n   transitionTypeClassName={'transition'}\r\n   /> */\n}","map":null,"metadata":{},"sourceType":"module"}